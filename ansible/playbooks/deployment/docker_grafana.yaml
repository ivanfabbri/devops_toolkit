---
- name: Deploy Grafana latest
  hosts: controller
  gather_facts: false

  tasks:

    - name: Ensure the monitoring network is created
      community.docker.docker_network:
        name: monitoring_network
        state: present

    - name: Create a directory to map Grafana information
      ansible.builtin.file:
        path: /opt/grafana
        state: directory
        mode: '0700'
        owner: "{{ uid }}"
        group: "{{ gid }}"
      become: true

    - name: Stop the existing Grafana container (if running)
      community.docker.docker_container:
        name: grafana
        state: stopped
      ignore_errors: true  # Ignore errors if the container is not running

    - name: Remove the existing Grafana container
      community.docker.docker_container:
        name: grafana
        state: absent

    - name: Pull the latest Grafana image
      community.docker.docker_image:
        name: grafana/grafana:latest
        source: pull

    - name: Deploy Grafana with the latest image
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana:latest
        ports:
          - "3001:3000"
        volumes:
          - /opt/grafana:/var/lib/grafana
        env:
          # SSO with Authentik provider
          GF_SERVER_ROOT_URL: "{{ lookup('env', 'grafana_domain_url') }}"
          GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
          GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
          GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ lookup('env', 'grafana_sso_client_id') }}"
          GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ lookup('env', 'grafana_sso_client_secret') }}"
          GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
          GF_AUTH_GENERIC_OAUTH_AUTH_URL: "{{ lookup('env', 'grafana_sso_authorize') }}"
          GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "{{ lookup('env', 'grafana_sso_token') }}"
          GF_AUTH_GENERIC_OAUTH_API_URL: "{{ lookup('env', 'grafana_sso_user_info') }}"
          GF_AUTH_SIGNOUT_REDIRECT_URL: "{{ lookup('env', 'grafana_sso_redirect') }}"
          # Optionally enable auto-login (bypasses Grafana login screen)
          GF_AUTH_OAUTH_AUTO_LOGIN: "true"
          # Optionally map user groups from Authentik to Grafana roles
          GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "{{ lookup('env', 'grafana_sso_role_map') }}"
        labels:
          com.centurylinklabs.watchtower.enable: "true"
        networks:
          - name: monitoring_network
        user: "{{ uid }}:{{ gid }}"
        restart_policy: unless-stopped
        state: started